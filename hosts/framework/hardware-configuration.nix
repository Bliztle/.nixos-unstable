# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "thunderbolt" "usbhid" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/54deb403-fecb-4d74-bc61-448fa8d24cf4";
    fsType = "ext4";
  };

  boot.initrd.luks.devices = {
    "luks-ff667def-f72b-4c52-82c4-d1c34b78d678".device = "/dev/disk/by-uuid/ff667def-f72b-4c52-82c4-d1c34b78d678";
    "luks-swap" = {
      # Swap partition
      device = "/dev/disk/by-uuid/adfe86ed-6c17-4a2d-a812-cd4da570d2eb";
      # keyFile = "none"; # Encrypt with a new key each boot (confirm this is true)
      # allowDiscards = true;
    };
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/3917-447C";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  swapDevices = [
    # { device = "/dev/disk/by-uuid/4ecbfb9d-176d-41b1-ab35-a56c480dbdd2"; }
    {device = "/dev/mapper/luks-swap";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp192s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
